{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cat","type","value","onChange","target","getGif","categorias","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","categoria","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAiCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBAEFN,GAAc,SAAAO,GAAG,OAAKL,GAAL,mBAAmBK,OACpCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAASP,EACTQ,SAhBc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,a,+BCTlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAH,sDCaJO,G,KAVK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE3B,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,SCoBDO,EAvBC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,ECAL,SAACA,GAAe,IAAD,EAEdhC,mBAAS,CAC/BmB,KAAK,GACLc,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoB3C,OAdIC,qBAAU,WACNzB,EAAOqB,GACFK,MAAK,SAAAf,GAAG,OAELgB,YAAW,kBACPH,EAAS,CACLhB,KAAKG,EACLW,SAAQ,MAEd,UAGZ,CAACD,IAEAE,EDlB0BK,CAAaP,GAA9BP,EAFiB,EAEtBN,KAAYc,EAFU,EAEVA,QAGnB,OAEA,qCACI,oBAAIL,UAAU,yCAAd,SAAwDI,IACvDC,GAAW,mBAAGL,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEOdiB,EAtBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,cAFvB,mBAEhBY,EAFgB,KAEJb,EAFI,KAGvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQa,EAAWS,KAAI,SAACW,GAAD,OACV,cAAC,EAAD,CAEAA,UAAWA,GADNA,Y,MCX9BS,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.29720a0b.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=> {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        //se paso como referencia la funcion setCategorias\r\n        setCategorias(cat => [inputValue,...cat])\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value = {inputValue}\r\n                onChange ={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n\r\n}\r\nexport default AddCategory;\r\n","export const getGif = async (categorias) =>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categorias)}&limit=10&api_key=FrYPxXRECGT41MI4FzGDKgYWN3dryXHL`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gif = data.map( img =>{\r\n        return{\r\n            id:img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url, //el ? pregunta si ese atributo existe\r\n        }\r\n    })\r\n\r\n    return gif;\r\n}","import React from 'react';\r\nimport 'animate.css/animate.min.css';\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInRight\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\nimport 'animate.css/animate.min.css';\r\n\r\nconst GifGrid = ({categoria}) => {\r\n\r\n    const {data:images,loading}= useFetchGifs(categoria);\r\n\r\n  \r\n    return (\r\n        \r\n    <>\r\n        <h3 className=\"animate__animated animate__fadeInRight\">{categoria}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) =>(\r\n                    <GifGridItem \r\n                    key={img.id} \r\n                    {...img}/>\r\n                    ))\r\n                } \r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    \r\n   const [state, setState] = useState({\r\n       data:[],\r\n       loading:true\r\n   });\r\n    useEffect(()=>{\r\n        getGif(categoria)\r\n            .then(img =>(\r\n\r\n                setTimeout(()=>(\r\n                    setState({\r\n                        data:img,\r\n                        loading:false\r\n                    })\r\n                ),3000)\r\n                \r\n            ))\r\n    },[categoria]);\r\n\r\nreturn state;\r\n}\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['one punch']);\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map((categoria) =>(\r\n                         <GifGrid \r\n                         key={categoria}\r\n                         categoria={categoria} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}